package com.drongo.scanner.ui.utils

enum class CodeTypes(val id: Int, val codeName: String) {

    Code39(0x01,"Code 39"),
    UPCA(0x08,"UPC-A"),
    UPCE(0x09,"UPC-E"),
    EAN13JAN13(0x0B,"EAN-13/JAN-13"),
    EAN8JAN8(0x0A,"EAN-8/JAN-8"),
    Discrete2of5(0x04,"Discrete 2 of 5"),
    Interleaved2of5(0x06,"Interleaved 2 of 5"),
    Codabar(0x02,"Codabar"),
    Code128(0x03,"Code 128"),
    Code93(0x07,"Code 93"),
    Code11(0x0C,"Code 11"),
    MSI(0x0E,"MSI"),
    UPCE1(0x10,"UPC-E1"),
    TriopticCode39(0x15,"Trioptic Code 39"),
    GS1128formerlyUCCEAN128(0x0F,"GS1-128 (formerly UCC/EAN-128)"),
    PDF417(0x11,"PDF417"),
    Code39FullASCIIConversion(0x13,"Code 39 Full ASCII Conversion"),
    BooklandEAN(0x16,"Bookland EAN"),
    ISBT128(0x19,"ISBT 128"),
    UCCCouponExtendedCode(0x3B,"UCC Coupon Extended Code"),
    ConvertCode39toCode32(0x20,"Convert Code 39 to Code 32"),
    USPostnet(0x1E,"US Postnet"),
    USPlanet(0x1F,"US Planet"),
    UKPostal(0x27,"UK Postal"),
    MicroPDF417(0x1A,"MicroPDF417"),
    JapanPostal(0x22,"Japan Postal"),
    AustraliaPost(0x23,"Australia Post"),
    DataMatrix(0x1B,"Data Matrix"),
    QRCode(0x1C,"QR Code"),
    Maxicode(0x25,"Maxicode"),
    NetherlandsKIXCodeDutchPostal(0x24,"Netherlands KIX Code(Dutch Postal)"),
    GS1DataBar14(0x30,"GS1 DataBar-14"),
    GS1DataBarLimited(0x31,"GS1 DataBar Limited"),
    GS1DataBarExpanded(0x32,"GS1 DataBar Expanded"),
    Chinese2of5(0x72,"Chinese 2 of 5"),
    MicroQR(0x2C,"MicroQR"),
    Aztec(0x2D,"Aztec"),
    Korean3of5(0x73,"Korean 3 of 5"),
    USPS4CBOneCodeIntelligentMail(0x34,"USPS 4CB/One Code/Intelligent Mail"),
    UPUFICSPostal(0x35,"UPU FICS Postal"),
    ISSNEAN(0x36,"ISSN EAN"),
    Matrix2of5(0x39,"Matrix 2 of 5"),
    HanXin(0xB7,"Han Xin"),
    DotCode(0x2E,"Dot Code"),
    OCR(0x4F,"OCR"),
    IATA(0x05,"IATA"),
    Code49(0x0D,"Code 49"),
    Code16K(0x12,"Code 16K"),
    UPCD(0x14,"UPC-D"),
    CouponCode(0x17,"Coupon Code"),
    NW7(0x18,"NW-7"),
    MicroPDFCCA(0x1D,"Micro PDF CCA"),
    ISBT128Con(0x21,"ISBT-128 Con"),
    CanadianPostal(0x26,"Canadian Postal"),
    MacroPDF(0x28,"Macro PDF"),
    MacroQR(0x29,"Macro QR"),
    AztecRune(0x2E,"Aztec Rune"),
    Scanlet(0x37,"Scanlet"),
    CueCode(0x38,"CueCode"),
    UPCA2Supplemental(0x48,"UPC-A + 2 Supplemental"),
    UPCE02Supplemental(0x49,"UPC-E0 + 2 Supplemental"),
    EAN82Supplemental(0x4A,"EAN-8 + 2 Supplemental"),
    EAN132Supplemental(0x4B,"EAN-13 + 2 Supplemental"),
    UPCE12Supplemental(0x50,"UPC-E1 + 2 Supplemental"),
    CCAEAN128(0x51,"CCA EAN-128"),
    CCAEAN13(0x52,"CCA EAN-13"),
    CCAEAN8(0x53,"CCA EAN-8"),
    CCAGS1DataBarExpanded(0x54,"CCA GS1 DataBar Expanded"),
    CCAGS1DataBarLimited(0x55,"CCA GS1 DataBar Limited"),
    CCAGS1DataBar14(0x56,"CCA GS1 DataBar-14"),
    CCAUPCA(0x57,"CCA UPC-A"),
    CCAUPCE(0x58,"CCA UPC-E"),
    CCCEAN128(0x59,"CCC EAN-128"),
    TLC39(0x5A,"TLC-39"),
    CCBEAN128(0x61,"CCB EAN-128"),
    CCBEAN13(0x62,"CCB EAN-13"),
    CCBEAN8(0x63,"CCB EAN-8"),
    CCBGS1DataBarExpanded(0x64,"CCB GS1 DataBar Expanded"),
    CCBGS1DataBarLimited(0x65,"CCB GS1 DataBar Limited"),
    CCBGS1DataBar14(0x66,"CCB GS1 DataBar-14"),
    CCBUPCA(0x67,"CCB UPC-A"),
    CCBUPCE(0x68,"CCB UPC-E"),
    SignatureCapture(0x69,"Signature Capture"),
    UPCA5supplemental(0x88,"UPC-A + 5 supplemental"),
    UPCE05supplemental(0x89,"UPC-E0 + 5 supplemental"),
    EAN85supplemental(0x8A,"EAN-8 + 5 supplemental"),
    EAN135supplemental(0x8B,"EAN-13 + 5 supplemental"),
    UPCE15Supplemental(0x90,"UPC-E1 + 5 Supplemental"),
    MacroMicroPDF(0x9A,"Macro Micro PDF"),
    GS1DatabarCoupon(0xB4,"GS1 Databar Coupon");


    companion object {
        private val map = CodeTypes.values().associateBy(CodeTypes::id)
        fun fromId(type: Int) = map[type]
    }
}